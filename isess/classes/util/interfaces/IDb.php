<?php
namespace smash_custom_profile;

if (!interface_exists("IDb")) {

    /**
     *
     * @author femi
     */
    interface IDb {

        /**
         * Retreives multiple OBJECT rows from the active table database based on the fields set and the condition
         * if any
         * 
         * @param array $_fields - the fields to retrieve e.g. (line1,line2,city)
         * @param string $_condition - database condition e.g Address_Id > 4 (don't put WHERE in this field)
         * @param integer $_index - the starting record
         * @param integer $_limit - number of rows to return
         * @return array - an array of objects
         */
        public static function _get($_fields = NULL, $_condition = NULL, $_index = 0, $_limit = 100);

        /**
         * Updates the set fields on the table representing the class calling this function
         * @param type $_fieldlist - an array of key value pairs eg ("line1" => 52,"city" => "london");
         * @param type $_condition - database condition e.g Address_Id > 4 (don't put WHERE in this field)
         * @return boolean - true/false if succesfull or not
         */
        public static function _update(array $_fieldlist, array $_condition);

        /**
         * deletes an entry from the active table on the database according to the specified condition
         * @param type $_condition - database condition e.g Address_Id > 4 (don't put WHERE in this field)
         * @return boolean - true/false if succesfull or not
         */
        public static function _delete($_condition);

        /**
         * creates a new row on the active table of the database
         * @param type $_fieldlist - an array of key value pairs eg ("line1" => 52,"city" => "london")
         * @param type $_aExcludeFields - an optional array of fields that should nto be set in the create query. e.g. fields that have default
         * values generated by the db
         * @return boolean - true/false if succesfull or not
         */
        public function create(array $_fieldlist = NULL, $_aExcludeFields = NULL);

        /**
         * Updates all fields or the set fields in $_fieldlist of the active class instance (calling this function)
         * @param type $_fieldlist - an array of key value pairs eg ("line1" => 52,"city" => "london");
         * @param type $_condition - database condition e.g Address_Id > 4 (don't put WHERE in this field)
         * @return boolean - true/false if succesfull or not
         */
        public function update(array $_fieldlist = NULL, $_condition = NULL);

        /**
         * deletes this classes instance from the database
         * @return boolean - true/false if succesfull or not
         */
        public function delete();

        /**
         * Retreives the latest values of all the fields in this class or a selected number set in $_fields 
         * for the active class instance and the condition if any
         * @param array $_fields - the fields to retrieve e.g. (line1,line2,city)
         * @param integer $_index - the starting record
         * @param string $_condition - database condition e.g Address_Id > 4 (don't put WHERE in this field)
         * @return array - the result set from the db
         */
        public function get(array $_fields = NULL, $_index = 0, $_condition = NULL);

        /**
         * returns the value of the active class instance PrimaryKey
         * @return integer
         */
        public function getId();

        /**
         * 
         * sets the value of  the active class instance PrimaryKey
         * @param integer $_nId
         */
        public function setId($_nId);

        /**
         * Override this function to return the last error that occurred by an action on this class
         * @return string
         */
        public function getLastError();
    }

}