<?php

/**
 * @author      Victor Aluko 
 * @copyright   2010
 * @filesource  ConnException.php
 */

require_once("iException.php");
require_once("constants.php");

/**
 * ConnException
 * 
 * @author      Victor Aluko 
 * @copyright   2010
 * @version     1.0
 * @access      public
 */
class ConnException extends Exception implements iException
{
    /**
     * The db connection string that generated the exception
     * @access  protected
     * @var     string
     * */
    protected $connStr;
    
    /**
     * The user-friendly error message that should be displayed for the exception
     * @access  protected
     * @var     string
     * */
    protected $displayMsg;
                    
    /**
     * The error level that should be used to display errors
     * @access  private
     * @staticvar  integer
     * */
    private static $errLevel = GLOB_ERR_LEVEL;
    
    /**
     * ConnException::__construct()
     * 
     * @param   string $msg - The error message generated by this exception
     * @param   int $errcode - The error code
     * @param   string $displayMsg - The user friendly message that should be displayed for this exception
     * @param   string $connStr - The connection string
     * @return  void
     */
    public function __construct($msg, $errcode, $displayMsg='', $connStr='')
    {
        $this->displayMsg = $displayMsg;
        $this->connStr = $connStr;
        //self::setErrorLevel();
        parent::__construct($msg, $errcode);
    }
    
    /**
     * ConnException::setErrorLevel()
     * 
     * @access  public
     * @static
     * @param   int $errLvl - The error level
     * @return  void
     */
    public static function setErrorLevel($errLvl)
    {
        self::$errLevel = $errLvl;
    }
        
    /**
     * ConnException::getDisplayMsg()
     * 
     * This method returns the user-friendly error message of this exception
     * 
     * @access  public
     * @return  string
     */
    public function getDisplayMsg()
    {
        return $this->displayMsg;
    }
        
    /**
     * ConnException::display()
     * 
     * This function handles the display of the exception class. 
     * This function can be called in place of getMessage() to display the error messages.
     * The error level must be a value among the class constants
     * 
     * @access  public
     * @param   void
     * @return  string
     */
    public function display()
    {
        $returnmsg = '';
        
        switch (self::$errLevel)
        {
            case ERR_LEVEL_SILENT : $returnmsg = "";
                break;
                            
            case ERR_LEVEL_DEBUG : 
                $returnmsg = "ERROR : ".$this->getMessage();
                $returnmsg .= "\n ERROR CODE : ".$this->getCode();
                break;
                
            case ERR_LEVEL_FULL : 
                $returnmsg = "ERROR : ".$this->getMessage();
                $returnmsg .= "\n ERROR CODE : ".$this->getCode();
                $returnmsg .= "\n CONN STRING : ".$this->connStr;
                $returnmsg .= "\n FILE : ".$this->getFile()." \n LINE : ".$this->getLine();
                break;
            
            case ERR_LEVEL_MINIMAL : $returnmsg = $this->displayMsg;
                break;
                
            default : $returnmsg = get_class($this)." was thrown";
                break;
        }
        
        return $returnmsg;
    }
    
}
